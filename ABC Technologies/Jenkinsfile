pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'essy09/abc-retail-app'
        DOCKER_HUB_CREDENTIALS = 'DOCKER_HUB_PWD'  // This is the ID of the stored Jenkins credentials
        KUBERNETES_CONFIG = '/root/.kube/config' 
        ANSIBLE_PLAYBOOK_PATH = 'ABC Technologies/deploy/deploy.yml'  // Fixed the path here
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository from GitHub...'
                git url: 'https://github.com/EstherTimbwa/industry-devops-project.git', branch: 'master'
            }
        }

        stage('Build Application') {
            steps {
                echo 'Building application...'
                dir('ABC Technologies') {
                    sh 'pwd'  // Check current directory
                    sh 'ls -la'  // List files in the directory to ensure the correct files are there
                    sh 'mvn clean compile'
                }
            }
        }

        stage('Test Application') {
            steps {
                echo 'Running tests...'
                dir('ABC Technologies') {
                    sh 'mvn test'
                }
            }
        }

        stage('Package Application') {
            steps {
                echo 'Packaging application...'
                dir('ABC Technologies') {
                    sh 'mvn package'
                    archiveArtifacts artifacts: 'target/*.war', fingerprint: true
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                echo 'Building and pushing Docker image...'
                script {
                    dir('ABC Technologies') {
                        // Use withCredentials to securely inject Docker credentials
                        withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB_PWD', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                            sh '''
                            docker build -t $DOCKER_HUB_REPO:latest .
                            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
                            docker push $DOCKER_HUB_REPO:latest
                            '''
                        }
                    }
                }
            }
        }

        stage('Deploy with Ansible') {
            steps {
                echo 'Deploying with Ansible...'
                script {
                    sh 'ls -la ABC Technologies/deploy'
                    ansiblePlaybook installation: 'Ansible', playbook: ANSIBLE_PLAYBOOK_PATH
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                script {
                    sh '''
                    export KUBECONFIG=$KUBERNETES_CONFIG
                    ls -la
                    kubectl apply -f deployment.yml
                    kubectl apply -f service.yml
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
    }
}
